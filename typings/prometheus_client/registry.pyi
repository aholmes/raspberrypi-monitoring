"""
This type stub file was generated by pyright.
"""

class CollectorRegistry:
    """Metric collector registry.

    Collectors must have a no-argument method 'collect' that returns a list of
    Metric objects. The returned metrics should be consistent with the Prometheus
    exposition formats.
    """
    def __init__(self, auto_describe=..., target_info=...) -> None:
        ...
    
    def register(self, collector): # -> None:
        """Add a collector to the registry."""
        ...
    
    def unregister(self, collector): # -> None:
        """Remove a collector from the registry."""
        ...
    
    def collect(self): # -> Generator[Metric | Unknown, None, None]:
        """Yields metrics from the collectors in the registry."""
        ...
    
    def restricted_registry(self, names): # -> RestrictedRegistry:
        """Returns object that only collects some metrics.

        Returns an object which upon collect() will return
        only samples with the given names.

        Intended usage is:
            generate_latest(REGISTRY.restricted_registry(['a_timeseries']))

        Experimental."""
        ...
    
    def set_target_info(self, labels): # -> None:
        ...
    
    def get_target_info(self): # -> dict[Unknown, Unknown]:
        ...
    
    def get_sample_value(self, name, labels=...):
        """Returns the sample value, or None if not found.

        This is inefficient, and intended only for use in unittests.
        """
        ...
    


class RestrictedRegistry:
    def __init__(self, names, registry) -> None:
        ...
    
    def collect(self): # -> Generator[Unknown, None, None]:
        ...
    


REGISTRY = ...
